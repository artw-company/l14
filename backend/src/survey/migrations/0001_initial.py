# Generated by Django 5.1.7 on 2025-03-13 14:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.CharField(max_length=255, verbose_name="Текст ответа")),
                ("sort", models.IntegerField(default=0, verbose_name="Порядок сортировки")),
            ],
            options={
                "verbose_name": "Ответ",
                "verbose_name_plural": "Ответы",
                "ordering": ["sort"],
            },
        ),
        migrations.CreateModel(
            name="Survey",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="Название опроса")),
                ("sort", models.IntegerField(default=0, verbose_name="Порядок сортировки")),
            ],
            options={
                "verbose_name": "Опрос",
                "verbose_name_plural": "Опросы",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.TextField(verbose_name="Текст вопроса")),
                ("short_text", models.CharField(max_length=255, verbose_name="Короткий текст вопроса")),
                (
                    "q_type",
                    models.CharField(
                        choices=[("radio", "Radio"), ("checkbox", "Checkbox")],
                        max_length=20,
                        verbose_name="Тип вопроса",
                    ),
                ),
                ("meta", models.JSONField(default=dict, verbose_name="Метаданные")),
                (
                    "survey",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="survey.survey",
                        verbose_name="Опрос",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вопрос",
                "verbose_name_plural": "Вопросы",
            },
        ),
        migrations.CreateModel(
            name="QuestionAnswer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "answer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_answers",
                        to="survey.answer",
                        verbose_name="Ответ",
                    ),
                ),
                (
                    "next_question",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="next_question_answers",
                        to="survey.question",
                        verbose_name="Следующий вопрос",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_answers",
                        to="survey.question",
                        verbose_name="Вопрос",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь вопроса и следующего вопроса",
                "verbose_name_plural": "Связи вопросов и следующих вопросов",
                "unique_together": {("question", "answer")},
            },
        ),
    ]
